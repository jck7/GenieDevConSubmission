<Window x:Class="ExcelGenie.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ExcelGenie"
        xmlns:controls="clr-namespace:ExcelGenie.Controls"
        xmlns:converters="clr-namespace:ExcelGenie.Converters"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        Title="Genie For Excel"
        Height="800"
        Width="500"
        MinWidth="400"
        MinHeight="600"
        WindowStyle="None"
        BorderThickness="1"
        BorderBrush="#3A3A3A"
        Icon="/ExcelGenie.ico"
        Background="{Binding isDarkTheme, RelativeSource={RelativeSource Self}, Converter={StaticResource BackgroundConverter}}"
        MouseLeftButtonDown="OnMouseLeftButtonDown_">

    <!-- WindowChrome for borderless, resizable window -->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" 
                      ResizeBorderThickness="4"
                      GlassFrameThickness="0"
                      CornerRadius="0"
                      NonClientFrameEdges="None"/>
    </WindowChrome.WindowChrome>
    
    <!-- ========== BEGIN Resource Dictionaries & Styles (Combination of Code 1 + Code 2) ========== -->
    <Window.Resources>

        <!-- Converters (both from Code 1 & Code 2) -->
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:ThemeColorConverter x:Key="ThemeColorConverter"/>
        <converters:BackgroundConverter x:Key="BackgroundConverter"/>
        <converters:BorderConverter x:Key="BorderConverter"/>
        <converters:BorderHoverConverter x:Key="BorderHoverConverter"/>
        <converters:DividerConverter x:Key="DividerConverter"/>
        <converters:PlaceholderConverter x:Key="PlaceholderConverter"/>

        <!-- Example extra brush from Code 2 (optional) -->
        <SolidColorBrush x:Key="PrimaryColor" Color="#0078D4"/>
        <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#FFFFFF"/>

        <!-- Global style to remove focus rectangles -->
        <Style TargetType="{x:Type FrameworkElement}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type Control}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        </Style>

        <!-- VSCodeButton style (modern flat button) -->
        <Style x:Key="VSCodeButton" TargetType="Button">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource BackgroundConverter}}"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource ThemeColorConverter}}"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinHeight" Value="36"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Dark theme + hover -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="True"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#106EBE"/>
                            </MultiDataTrigger>
                            <!-- Light theme + hover -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#F0F0F0"/>
                            </MultiDataTrigger>
                            <!-- Dark theme + disabled -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="True"/>
                                    <Condition Binding="{Binding IsEnabled}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#252525"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </MultiDataTrigger>
                            <!-- Light theme + disabled -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsEnabled}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- FileActionButton (for "Open File"/"New File" in NoFileView) -->
        <Style x:Key="FileActionButton" TargetType="Button" BasedOn="{StaticResource VSCodeButton}">
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Dark theme + hover -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="True"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#3D3D3D"/>
                                <Setter Property="BorderBrush" Value="#4A4A4A"/>
                            </MultiDataTrigger>
                            <!-- Light theme + hover -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#F0F0F0"/>
                                <Setter Property="BorderBrush" Value="#D0D0D0"/>
                            </MultiDataTrigger>
                            <!-- Light theme + enabled -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsEnabled}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource BackgroundConverter}}"/>
                                <Setter Property="BorderBrush" Value="#E0E0E0"/>
                            </MultiDataTrigger>
                            <!-- Dark theme + disabled -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="True"/>
                                    <Condition Binding="{Binding IsEnabled}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#252525"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </MultiDataTrigger>
                            <!-- Light theme + disabled -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsEnabled}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ActionButtonStyle (bottom panel's "Audit Formulas," "Make Print-Ready," etc.) -->
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource ThemeColorConverter}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource BorderConverter}}"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#4A4A4A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                                <Setter Property="BorderBrush" Value="#4A4A4A"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Window Button Style (Minimize, Maximize, Close) -->
        <Style x:Key="WindowButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource ThemeColorConverter}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}">
                            <Viewbox Width="12" Height="12" Margin="0,0,0,0">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="True"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2A2A2A"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#F0F0F0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Close Button Style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C42B1C"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Minimal ScrollBar & ScrollViewer (used for chat, etc.) -->
        <Style x:Key="MinimalScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Track x:Name="PART_Track" IsDirectionReversed="True">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" Opacity="0"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="#808080" 
                                                        CornerRadius="4"
                                                        Width="6"
                                                        Margin="1,0">
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Opacity" Value="0.3"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ScrollBar}}" Value="True">
                                                                    <Setter Property="Opacity" Value="0.8"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" Opacity="0"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MinimalScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollContentPresenter Grid.Column="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Style="{StaticResource MinimalScrollBar}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TransparentRichTextBox style (for the input area) -->
        <Style x:Key="TransparentRichTextBox" TargetType="RichTextBox">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RichTextBox">
                        <Border x:Name="border" 
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Background="{x:Null}"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </Style.Resources>
        </Style>

        <!-- Worksheet Button Style -->
        <Style x:Key="WorksheetButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource ThemeColorConverter}}"/>
            <Setter Property="Padding" Value="16,6"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource BorderConverter}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2A2A2A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Worksheet Navigation Button Style -->
        <Style x:Key="WorksheetNavigationButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource BackgroundConverter}}"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource ThemeColorConverter}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource BorderConverter}}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2A2A2A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Updated Connection Status Button Style with Pulsing Dot -->
        <Style x:Key="ConnectionStatusButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="16,0,16,0"/>
            <Setter Property="Margin" Value="5,0,10,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#FF5252"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0">
                            <TextBlock x:Name="StatusText"
                                       VerticalAlignment="Center"
                                       Margin="0,0,8,0"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="{TemplateBinding Content}" />
                            <Grid Width="8" Height="8" VerticalAlignment="Center">
                                <Ellipse x:Name="ConnectionDot" 
                                        Fill="{TemplateBinding Foreground}"
                                        Width="8" 
                                        Height="8"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform x:Name="DotScale"/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ConnectionDot" Property="Opacity" Value="0.8" />
                                <Setter TargetName="StatusText" Property="Opacity" Value="0.8" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsExcelConnected}" Value="True">
                                <Setter TargetName="StatusText" Property="Text" Value="Connected" />
                                <Setter Property="Foreground" Value="#4CAF50"/>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="PulseStoryboard">
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="DotScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                From="1" To="1.2" Duration="0:0:1"
                                                AutoReverse="True" RepeatBehavior="Forever"/>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="DotScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                From="1" To="1.2" Duration="0:0:1"
                                                AutoReverse="True" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="PulseStoryboard"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExcelConnected}" Value="False">
                                <Setter TargetName="StatusText" Property="Text" Value="Not Connected" />
                                <Setter Property="Foreground" Value="#FF5252"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Toolbar Icon Button Style (for main toolbar icons) -->
        <Style x:Key="ToolbarIconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme, Converter={StaticResource ThemeColorConverter}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Width" Value="36"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                CornerRadius="4">
                            <Viewbox Width="16" Height="16">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="True"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2A2A2A"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=isDarkTheme}" Value="False"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#F0F0F0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <!-- ========== END Resource Dictionaries & Styles ========== -->

    <Grid x:Name="MainGrid">
        <!-- 
            Updated row layout:
            Row 0: Window Control Bar (Min/Max/Close) - 40px
            Row 1: Main Toolbar (SelectFile, ConnectionStatus, Info, ThemeToggle, Settings) - 40px
            Row 2: Loading Progress - Auto
            Row 3: Main Content Area (WorkbookExplorer + Chat) - *
            Row 4: Quick Actions - Auto
            Row 5: Input Area - Auto
        -->
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>   <!-- Title bar with window buttons -->
            <RowDefinition Height="40"/>   <!-- App's main toolbar row -->
            <RowDefinition Height="Auto"/> <!-- Loading progress -->
            <RowDefinition Height="*"/>    <!-- Main content area -->
            <RowDefinition Height="Auto"/> <!-- Quick actions -->
            <RowDefinition Height="Auto"/> <!-- Input area -->
        </Grid.RowDefinitions>

        <!-- ========== PALANTIR PROCESSING OVERLAY ========== -->
        <Grid x:Name="PalantirProcessingOverlay"
              Visibility="Collapsed">
            <!-- Keep step references collapsed -->
            <TextBlock x:Name="Step1Check" Visibility="Collapsed"/>
            <TextBlock x:Name="Step2Check" Visibility="Collapsed"/>
            <TextBlock x:Name="Step3Check" Visibility="Collapsed"/>
            <TextBlock x:Name="Step4Check" Visibility="Collapsed"/>
            <TextBlock x:Name="Step5Check" Visibility="Collapsed"/>
            <TextBlock x:Name="Step6Check" Visibility="Collapsed"/>
            
            <!-- Keep text references collapsed -->
            <TextBlock x:Name="Step1Text" Visibility="Collapsed"/>
            <TextBlock x:Name="Step2Text" Visibility="Collapsed"/>
            <TextBlock x:Name="Step3Text" Visibility="Collapsed"/>
            <TextBlock x:Name="Step4Text" Visibility="Collapsed"/>
            <TextBlock x:Name="Step5Text" Visibility="Collapsed"/>
            <TextBlock x:Name="Step6Text" Visibility="Collapsed"/>
        </Grid>

        <!-- ========== ROW 0: WINDOW CONTROL BAR ========== -->
        <Grid Grid.Row="0" Background="Transparent" MouseLeftButtonDown="OnMouseLeftButtonDown_">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>

            <!-- Title -->
            <TextBlock Text="Genie For Excel"
                      Grid.Column="0"
                      VerticalAlignment="Center"
                      FontSize="14"
                      FontWeight="SemiBold"
                      Margin="16,0,0,0"
                      Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>

            <!-- Window Control Buttons -->
            <Button x:Name="MinimizeButton"
                    Grid.Column="2"
                    Style="{StaticResource WindowButtonStyle}"
                    Click="MinimizeButton_Click">
                <Path Data="M0,0 L8,0"
                      Stroke="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                      StrokeThickness="1"/>
            </Button>

            <Button x:Name="MaximizeButton"
                    Grid.Column="3"
                    Style="{StaticResource WindowButtonStyle}"
                    Click="MaximizeButton_Click">
                <Path Data="M0,0 L8,0 L8,8 L0,8 Z"
                      Stroke="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                      StrokeThickness="1"
                      Fill="Transparent"/>
            </Button>

            <Button x:Name="CloseButton"
                    Grid.Column="4"
                    Style="{StaticResource WindowButtonStyle}"
                    Click="CloseButton_Click">
                <Path Data="M0,0 L8,8 M0,8 L8,0"
                      Stroke="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                      StrokeThickness="1"/>
            </Button>
        </Grid>

        <!-- A small divider below top bar -->
        <Border Grid.Row="0" 
                BorderBrush="#3A3A3A" 
                BorderThickness="0,0,0,1" 
                VerticalAlignment="Bottom"
                HorizontalAlignment="Stretch"/>

        <!-- ========== ROW 1: MAIN TOOLBAR ========== -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>      <!-- Expand for "SelectFileButton" -->
                <ColumnDefinition Width="Auto"/>   <!-- ConnectionStatusButton -->
                <ColumnDefinition Width="Auto"/>   <!-- InfoButton -->
                <ColumnDefinition Width="Auto"/>   <!-- ThemeToggleButton -->
                <ColumnDefinition Width="Auto"/>   <!-- SettingsButton -->
            </Grid.ColumnDefinitions>

            <!-- Select File Button -->
            <Button x:Name="SelectFileButton"
                    Grid.Column="0"
                    Content="Select File"
                    Click="SelectFile_Click"
                    Margin="10,0,10,0"
                    Height="36"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource VSCodeButton}">
                        <Setter Property="Padding" Value="8,4"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Connection Status -->
            <Button x:Name="ConnectionStatusButton"
                    Grid.Column="1"
                    Style="{StaticResource ConnectionStatusButtonStyle}"
                    Click="ConnectionStatusButton_Click"/>

            <!-- Info Button -->
            <Button x:Name="InfoButton"
                    Grid.Column="2"
                    Style="{StaticResource ToolbarIconButtonStyle}"
                    Click="InfoButton_Click">
                <Path Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                      Fill="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
            </Button>

            <!-- Theme Toggle Button -->
            <Button x:Name="ThemeToggleButton"
                    Grid.Column="3"
                    Style="{StaticResource ToolbarIconButtonStyle}"
                    Click="ThemeToggleButton_Click">
                <Path x:Name="ThemeIcon"
                      Data="M12 21q-3.75 0-6.375-2.625T3 12q0-3.75 2.625-6.375T12 3q.35 0 .688.025.337.025.662.075-1.025.725-1.687 1.887Q11 6.15 11 7.5q0 2.25 1.575 3.825Q14.15 12.9 16.4 12.9q1.35 0 2.513-.662 1.162-.663 1.887-1.688.05.325.075.663Q21 11.65 21 12q0 3.75-2.625 6.375T12 21Z"
                      Stretch="Uniform"
                      Fill="{Binding RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}, Path=isDarkTheme}"/>
            </Button>

            <!-- Settings Button -->
            <Button x:Name="SettingsButton"
                    Grid.Column="4"
                    Style="{StaticResource ToolbarIconButtonStyle}"
                    Click="SettingsButton_Click"
                    Margin="5,0,10,0">
                <Path Data="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"
                      Fill="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
            </Button>
        </Grid>

        <!-- Loading Progress Bar (below main toolbar) -->
        <Grid Grid.Row="2" Height="Auto">
            <StackPanel x:Name="ProcessingPanel" 
                      Margin="10,4,10,4" 
                      Visibility="{Binding ElementName=PalantirProcessingOverlay, Path=Visibility}">
                <ProgressBar x:Name="LoadingProgressBar"
                           Height="2"
                           Minimum="0"
                           Maximum="100"
                           Value="0"
                           Foreground="#1D6F42"
                           Background="#20000000"
                           BorderThickness="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Style.Triggers>
                                <Trigger Property="Value" Value="100">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Value"
                                                    To="0"
                                                    Duration="0:0:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>

                <!-- Current Operation Label -->
                <TextBlock x:Name="CurrentOperationLabel"
                         Text="Starting indexing process..."
                         Margin="0,4,0,0"
                         HorizontalAlignment="Center"
                         TextAlignment="Center"
                         FontSize="11"
                         Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>

                <!-- Processing Details Panel -->
                <StackPanel x:Name="ProcessingDetailsPanel" 
                          Margin="0,8,0,0" 
                          Visibility="Collapsed">
                    <!-- Workbook Info -->
                    <TextBlock x:Name="WorkbookInfoLabel"
                             Margin="0,2,0,2"
                             FontSize="11"
                             Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                    
                    <!-- Worksheet List -->
                    <ItemsControl x:Name="ProcessingWorksheetList" 
                                Margin="0,2,0,2">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"
                                         FontSize="11"
                                         Margin="0,1,0,1"
                                         Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Cell Count -->
                    <TextBlock x:Name="CellCountLabel"
                             Margin="0,2,0,2"
                             FontSize="11"
                             Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>

                    <!-- Chart List -->
                    <ItemsControl x:Name="ProcessingChartList"
                                Margin="0,2,0,2">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"
                                         FontSize="11"
                                         Margin="0,1,0,1"
                                         Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </StackPanel>
        </Grid>

        <!-- ========== ROW 3: MAIN CONTENT AREA ========== -->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/> <!-- WorkbookExplorer width reduced from 250 to 200 -->
                <ColumnDefinition Width="*"/>   <!-- Chat area -->
            </Grid.ColumnDefinitions>

            <!-- WorkbookExplorer -->
            <Border Grid.Column="0" 
                    Margin="10,10,5,10"
                    Background="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BackgroundConverter}}"
                    BorderBrush="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BorderConverter}}"
                    BorderThickness="1"
                    CornerRadius="8">
                <controls:WorkbookExplorer x:Name="WorkbookExplorer"
                                         Visibility="{Binding IsFileSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                                         WorkbookSelected="WorkbookExplorer_WorkbookSelected"
                                         WorksheetSelected="WorkbookExplorer_WorksheetSelected"
                                         ChartSelected="WorkbookExplorer_ChartSelected"/>
            </Border>

            <!-- Chat Area -->
            <Border Grid.Column="1"
                    Margin="5,10,10,10"
                    Background="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BackgroundConverter}}"
                    BorderBrush="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BorderConverter}}"
                    BorderThickness="1"
                    CornerRadius="8">
                <ScrollViewer x:Name="ChatScrollViewer"
                            VerticalScrollBarVisibility="Auto"
                            Style="{StaticResource MinimalScrollViewer}"
                            ScrollChanged="ChatScrollViewer_ScrollChanged">
                    <Grid>
                        <!-- Welcome View -->
                        <Grid x:Name="NoFileView"
                              Visibility="Collapsed">
                            <StackPanel VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Margin="20">
                                <TextBlock Text="Get Started"
                                           FontSize="24"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Center"
                                           Margin="0,0,0,20"
                                           Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>

                                <!-- Open File Button -->
                                <Button x:Name="SelectFileButton_NoFileView"
                                        Style="{StaticResource FileActionButton}"
                                        Click="SelectFile_Click"
                                        Margin="0,0,0,10">
                                    <StackPanel Orientation="Horizontal">
                                        <Path Data="M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z"
                                              Fill="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                                              Width="24" Height="24"
                                              Margin="0,0,10,0"/>
                                        <TextBlock Text="Open File"
                                                   VerticalAlignment="Center"
                                                   Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                                    </StackPanel>
                                </Button>

                                <!-- New File Button -->
                                <Button Style="{StaticResource FileActionButton}"
                                        Click="NewFile_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                                              Fill="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                                              Width="24"
                                              Height="24"
                                              Margin="0,0,10,0"/>
                                        <TextBlock Text="New File"
                                                   VerticalAlignment="Center"
                                                   Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                                    </StackPanel>
                                </Button>

                                <TextBlock Text="Recent Files"
                                           FontSize="16"
                                           FontWeight="SemiBold"
                                           Margin="0,30,0,10"
                                           Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                                <ItemsControl x:Name="RecentFilesList"
                                              MaxHeight="200">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource FileActionButton}"
                                                    Click="RecentFile_Click"
                                                    Margin="0,0,0,5">
                                                <StackPanel Orientation="Horizontal">
                                                    <Path Data="M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z"
                                                          Fill="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                                                          Width="24"
                                                          Height="24"
                                                          Margin="0,0,10,0"/>
                                                    <TextBlock Text="{Binding DisplayName}"
                                                               VerticalAlignment="Center"
                                                               Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"/>
                                                </StackPanel>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Grid>

                        <!-- Chat Panel -->
                        <StackPanel x:Name="ChatPanel"
                                    Visibility="Visible"
                                    Margin="10">
                            <!-- Messages will be added here dynamically -->
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </Border>
        </Grid>

        <!-- ========== ROW 4 + 5: BOTTOM PANEL (QUICK ACTIONS + INPUT AREA + WORKSHEET LIST) ========== -->
        <Grid Grid.Row="4" Grid.RowSpan="2" Margin="8,0,8,8">
            <!-- "Floating" border panel from Code 2 style -->
            <Border Background="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=isDarkTheme, Converter={StaticResource BackgroundConverter}}"
                    BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=isDarkTheme, Converter={StaticResource BorderConverter}}"
                    BorderThickness="1"
                    CornerRadius="8">
                <Grid Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>  <!-- top row: AddContext, SelectRange, Custom -->
                        <RowDefinition Height="Auto"/>  <!-- middle row: AuditFormulas, SuggestImprovements, PrintReady -->
                        <RowDefinition Height="Auto"/>  <!-- worksheets navigation row -->
                        <RowDefinition Height="Auto"/>  <!-- input row -->
                    </Grid.RowDefinitions>

                    <!-- Row 0: AddContext, SelectRange, Custom Buttons -->
                    <Grid Grid.Row="0" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="DragDropArea"
                                Grid.Column="0"
                                Content="Add Context"
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="10,8,5,8"
                                AllowDrop="True"
                                Drop="DragDropArea_Drop"
                                DragEnter="DragDropArea_DragEnter"
                                DragLeave="DragDropArea_DragLeave"
                                Click="AddContext_Click"/>

                        <Button x:Name="SelectRangeButton"
                                Grid.Column="1"
                                Content="Select Range"
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="5,8,5,8"
                                Click="SelectRange_Click"/>

                        <Button x:Name="CustomInstructionsButton"
                                Grid.Column="2"
                                Content="Custom"
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="5,8,5,8"
                                Click="CustomInstructionsButton_Click"/>
                    </Grid>

                    <!-- Row 1: Quick actions - Audit, Suggest, Print-Ready (Shown only if file selected) -->
                    <Grid Grid.Row="1" Background="Transparent">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFileSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="AuditFormulasButton"
                                Grid.Column="0"
                                Content="Audit Formulas"
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="10,0,5,8"
                                Click="AuditFormulasButton_Click"/>
                        
                        <Button x:Name="SuggestImprovementsButton"
                                Grid.Column="1"
                                Content="Suggest Improvements"
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="5,0,5,8"
                                Click="SuggestImprovementsButton_Click"/>
                        
                        <Button x:Name="MakePrintReadyButton"
                                Grid.Column="2"
                                Content="Make Print-Ready"
                                Style="{StaticResource ActionButtonStyle}"
                                Margin="5,0,10,8"
                                Click="MakePrintReadyButton_Click"/>
                    </Grid>

                    <!-- Row 2: Worksheet list (buttons for each sheet) + nav buttons -->
                    <Grid Grid.Row="2" Background="Transparent">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFileSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ScrollViewer x:Name="WorksheetScrollViewer"
                                      Grid.Column="0"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Disabled"
                                      Style="{StaticResource MinimalScrollViewer}"
                                      ScrollChanged="WorksheetScrollViewer_ScrollChanged">
                            <StackPanel x:Name="WorksheetListPanel" Orientation="Horizontal"/>
                        </ScrollViewer>

                        <!-- L / R scroll buttons -->
                        <StackPanel x:Name="NavigationButtonsPanel"
                                    Grid.Column="1"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    Margin="4,0,10,0"
                                    Visibility="Collapsed">
                            <Button x:Name="ScrollLeftButton"
                                    Style="{StaticResource WorksheetNavigationButtonStyle}"
                                    Margin="0,0,5,0"
                                    Click="ScrollLeft_Click">
                                <TextBlock Text="⯇" FontSize="12"/>
                            </Button>
                            <Button x:Name="ScrollRightButton"
                                    Style="{StaticResource WorksheetNavigationButtonStyle}"
                                    Click="ScrollRight_Click">
                                <TextBlock Text="⯈" FontSize="12"/>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <!-- Row 3: Input Area (RichTextBox + "submit") -->
                    <Grid Grid.Row="3" Margin="10,8,10,10" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Connection Status Message -->
                        <TextBlock x:Name="ConnectionStatusMessage"
                                 Grid.Row="0"
                                 Text="Please wait while connecting to Palantir..."
                                 Foreground="#FF5555"
                                 FontSize="12"
                                 Margin="0,0,0,5"
                                 Visibility="Collapsed"/>
                        
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <RichTextBox x:Name="InputTextBox"
                                         Grid.Column="0"
                                         Margin="0,0,5,0"
                                         Style="{StaticResource TransparentRichTextBox}"
                                         Foreground="{Binding isDarkTheme, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ThemeColorConverter}}"
                                         AcceptsReturn="True"
                                         VerticalScrollBarVisibility="Auto"
                                         KeyDown="InputTextBox_KeyDown"
                                         TextChanged="InputTextBox_TextChanged"
                                         FontFamily="Segoe UI"
                                         FontSize="13">
                                <RichTextBox.Document>
                                    <FlowDocument>
                                        <Paragraph>
                                            <Run Text=""/>
                                        </Paragraph>
                                    </FlowDocument>
                                </RichTextBox.Document>
                            </RichTextBox>

                            <Button x:Name="GenerateButton"
                                    Grid.Column="1"
                                    Style="{StaticResource ActionButtonStyle}"
                                    Content="submit"
                                    Margin="0,0,5,0"
                                    Click="GenerateButton_Click"
                                    IsEnabled="{Binding IsPalantirConnected}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>

        <!-- ========== INTERNET DISCONNECTED OVERLAY ========== -->
        <Grid x:Name="NoInternetOverlay"
              Grid.Row="0"
              Grid.RowSpan="5"
              Background="#80000000"
              Visibility="Collapsed">
            <TextBlock Text="No Internet Connection"
                       Foreground="White"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="16"
                       FontWeight="SemiBold"/>
        </Grid>
    </Grid>
</Window>
